---
- name: Check file exists package.json
  ansible.builtin.stat:
    path: "{{ hedgedoc_root }}/package.json"
  register: package_json_result
- name: Gather current install version
  when: package_json_result.stat.exists
  block:
    - name: Get package.json content
      ansible.builtin.command:
        cmd: cat {{ hedgedoc_root }}/package.json
      changed_when: false
      register: cat_result
    - name: Set current install version
      ansible.builtin.set_fact:
        installed_hedgedoc_version: "{{ (cat_result.stdout | from_json)['version'] }}"
- name: Set Install version variable
  when: hedgedoc_version == 'latest'
  block:
    - name: Set Github API request header
      ansible.builtin.set_fact:
        github_api_request_headers:
          Accept: application/vnd.github+json
    - name: Merge Github API Authorization request header
      ansible.builtin.set_fact:
        github_api_request_headers: "{{ github_api_request_headers | combine(merge_reauest_header) }}"
      vars:
        merge_reauest_header:
          Authorization: Bearer {{ lookup('env', 'GITHUB_TOKEN') }}
      when: lookup('env', 'GITHUB_TOKEN') | length > 0
    - name: Get latest version
      ansible.builtin.uri:
        url: https://api.github.com/repos/{{ hedgedoc_repo }}/releases/latest
        headers: "{{ github_api_request_headers }}"
      register: latest_release
    - name: Set hedgedoc_version variable
      ansible.builtin.set_fact:
        hedgedoc_version: "{{ latest_release.json.tag_name }}"
- name: Install/update HedgeDoc
  become: true
  become_user: "{{ hedgedoc_user }}"
  when: hedgedoc_version is version(installed_hedgedoc_version | default('0.0.0'), '!=')
  notify: Restart hedgedoc
  block:
    - name: Install/update HedgeDoc
      ansible.builtin.unarchive:
        src: https://github.com/{{ hedgedoc_repo }}/releases/download/{{ hedgedoc_version }}/hedgedoc-{{ hedgedoc_version }}.tar.gz
        dest: "{{ hedgedoc_root }}"
        extra_opts:
          - --strip-components=1
        remote_src: true
    - name: Install/update all packages in package.json
      ansible.builtin.command:
        cmd: yarn workspaces focus{% if hedgedoc_mode == 'production' %} --production{% endif %}
        chdir: "{{ hedgedoc_root }}"
